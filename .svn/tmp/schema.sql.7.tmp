CREATE TABLE USERS (
    USER_ID INTEGER NOT NULL,
    USERNAME VARCHAR(45) NOT NULL,
    PASSWORD VARCHAR(45) NOT NULL,
    ENABLED INTEGER NOT NULL,
    NAME VARCHAR(45) NOT NULL,
    DEPT VARCHAR(35) NOT NULL,
    PRIMARY KEY(USER_ID)
);

CREATE TABLE USER_ROLES (
    USER_ROLE_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,
    AUTHORITY VARCHAR(45) NOT NULL,
    PRIMARY KEY (USER_ROLE_ID),
    CONSTRAINT FK_USER_ROLES FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID)
);

create table USER_ACCESS_AUDIT(
    USER_ID varchar(45) not null,
    DATE_TIME TIMESTAMP not null,
    ACTION_TYPE varchar(50) not null,
    SESSION_ID varchar(80) not null,
    REMARK varchar(100) null
);

CREATE TABLE ALB_PROFILETABLE(
    PROFILE_ID VARCHAR(20) NOT NULL,
    PROFILE_ALARM_PROCESSING VARCHAR(20),
    CTRL_FILE_PARAMETER_EXTRACTION VARCHAR(50),
    CTRL_FILE_ALARM_IDENTIFIER VARCHAR(50),
    CUSTOM_FIELDS VARCHAR(30),
    ALB_VERSION INTEGER NOT NULL,
    ALB_USER VARCHAR(10),
    DATE_CREATED TIMESTAMP NOT NULL,
    PRIMARY KEY (PROFILE_ID, ALB_VERSION)
);

CREATE TABLE ALB_HOST(
  HOST_ID INTEGER NOT NULL,
  HOST_NAME VARCHAR(50) NOT NULL,
  HOST_IP VARCHAR(20) NOT NULL,
  PRIMARY KEY (HOST_ID)
);

CREATE TABLE ALB_PROFILE_HOST(
  PROFILE_ID VARCHAR(20) NOT NULL,
  HOST_ID INTEGER NOT NULL,
  TRANSLATE_STATUS VARCHAR(10),
  DEPLOY_STATUS VARCHAR(10),
  LAST_TRANSLATE TIMESTAMP NOT NULL,
  LAST_DEPLOY TIMESTAMP NOT NULL,
  ALB_VERSION INTEGER NOT NULL,
  PRIMARY KEY (PROFILE_ID, HOST_ID, ALB_VERSION)
);

CREATE TABLE ALB_SELCTRL(
    PROFILE_ID VARCHAR(20) NOT NULL,
    ACCESS_MODULE VARCHAR(30),
    GLOBAL_CLASS VARCHAR(20),
    DOMAINS VARCHAR(20),
    NODE_NAME VARCHAR(20),
    SUBCLASS VARCHAR(20),
    ORIGINAL_ALARM_REMAIN VARCHAR(20),
--    PROFILE VARCHAR(20), -- since we're using PROFILE_NAME as PROFILE_ID
    MANAGED_OBJECT_DISCRIMINATOR VARCHAR(20),
    ALB_VERSION INTEGER NOT NULL,
    ALB_USER VARCHAR(20),
    DATE_CREATED TIMESTAMP NOT NULL,
    PRIMARY KEY (PROFILE_ID, ALB_VERSION)
);

CREATE TABLE ALB_PARAMEXTRACT(
    PROFILE_ID VARCHAR(20) NOT NULL,
    TARGET_ALARM_PARAMETER VARCHAR(50),
    SOURCE_ALARM_PARAMETER VARCHAR(50),
    KEYWORD VARCHAR(50),
    EXTRACT_AFTER_KEYWORD VARCHAR(50),
    POST_PROCESSING VARCHAR(4000),
    ALB_VERSION INTEGER NOT NULL,
    ALB_USER VARCHAR(20),
    DATE_CREATED TIMESTAMP NOT NULL,
    ROW_NUM INTEGER,
    PRIMARY KEY (PROFILE_ID, TARGET_ALARM_PARAMETER, ALB_VERSION)
);

CREATE TABlE ALB_ALARMIDENTIFIER(
    PROFILE_ID VARCHAR(20) NOT NULL,
    EVENT_ID VARCHAR(50),
    VARIABLES VARCHAR(4000),
    SHOW_ALARM VARCHAR(20),
    DATABASE_TABLE VARCHAR(50),
    DATABASE_ACCESS VARCHAR(50),
    TABLE_COLUMNS VARCHAR(100),
    ADDITIONAL_TEXT VARCHAR(1000),
    PROBABLE_CAUSE VARCHAR(100),
    PERCEIVED_SEVERITY VARCHAR(20),
    ALARM_TYPE VARCHAR(20),
    USERTEXT VARCHAR(1000),
    LABEL1 VARCHAR(1000),
    LABEL2 VARCHAR(1000),
    LABEL3 VARCHAR(1000),
    LABEL4 VARCHAR(1000),
    LABEL5 VARCHAR(1000),
    LABEL6 VARCHAR(1000),
    LABEL7 VARCHAR(1000),
    LABEL8 VARCHAR(1000),
    LABEL9 VARCHAR(1000),
    LABEL10 VARCHAR(1000),
    ALB_VERSION INTEGER NOT NULL,
    ALB_USER VARCHAR(20),
    DATE_CREATED TIMESTAMP NOT NULL,
    ROW_NUM INTEGER
);

CREATE TABLE ALB_ALARMSAMPLE (
  ALARM_NAME VARCHAR(50) NOT NULL,
  ALARM_TEXT VARCHAR(4000) NOT NULL,
  ALARM_REMARK VARCHAR(200),
  PRIMARY KEY (ALARM_NAME)
);

CREATE TABLE ALB_REFERENCE (
  REF_CAT INTEGER NOT NULL,
  REF_NAME VARCHAR (50) NOT NULL ,
  REF_VALUE VARCHAR (50) NOT NULL ,
  REF_DESC VARCHAR (100),
  PRIMARY KEY (REF_CAT,REF_NAME)
);

CREATE SEQUENCE user_seq
 START WITH     3
 INCREMENT BY   1
 maxvalue 999999999
 NOCACHE
 CYCLE;

CREATE SEQUENCE user_role_seq
 START WITH     3
 INCREMENT BY   1
 maxvalue 999999999
 NOCACHE
 CYCLE;


-- CREATE SEQUENCE alb_host_seq
--  START WITH     1
--  INCREMENT BY   1
--  maxvalue 999999999
--  NOCACHE
--  CYCLE;


