var operationModesStore = Ext.create('Ext.data.Store', {
    fields: ['abbr', 'name'],
    data : [
        {"abbr":"UPLOAD", "name":"Upload"},
        {"abbr":"DOWNLOAD", "name":"Download"}
    ]
});

var activeFormPanel = {
    xtype:'form',
    height:200,
    id:'actv-form',
    url:'insertActiveJob.htm',
    layout:'form',
    frame:true,
    bodyPadding:10,
    defaults:{
        anchor:'100%',
        labelWidth:150
    },
    items       : [
        {
            xtype       : 'textfield',
            id          : 'serverNameTxt',
            anchor      : '100%',
            fieldLabel  : 'Server Name',
            name        : 'serverNameTxt',
            value       : 'ftp.brixnet.com'
        },{
            xtype       : 'textfield',
            id          : 'userNameTxt',
            anchor      : '100%',
            fieldLabel  : 'User Name',
            name        : 'userNameTxt',
            value       : 'brix_customer'
        },{
            xtype       : 'textfield',
            id          : 'pwdTxt',
            anchor      : '100%',
            fieldLabel  : 'Password',
            inputType   :  'password',
            name        : 'pwdTxt',
            value       : 'brix_customer'
        },{
            xtype       : 'combobox',
            name        : 'operationModesCmbBx',
            id          : 'operationModesCmbBx',
            fieldLabel  : 'Choose Operation Mode',
            store       :  operationModesStore,
            queryMode   : 'local',
            displayField: 'name',
            valueField  : 'abbr'
        } ,
        {
            xtype       : 'textfield',
            id          : 'fileNameTxt',
            anchor      : '100%',
            fieldLabel  : 'FileName',
            name        : 'fileNameTxt',
            value       : '/tmp/upload.txt'
        } ,{
            xtype       : 'textfield',
            id          : 'timeoutTxt',
            anchor      : '100%',
            fieldLabel  : 'Time Out(in seconds)',
            name        : 'timeoutTxt',
            value       : '100'
        } ,{
            xtype       : 'textfield',
            id          : 'subscriberIdTxt',
            anchor      : '100%',
            name        : 'subscriberId'
        }
    ],
    buttons: [{
        text: 'Reset',
        handler: function() {
            this.up('form').getForm().reset();
        }
    }, {
        id:'insertActiveJobBtn',
        text: 'Submit',
        formBind: true,
        disabled: true,
        handler: insertActiveJob
    }],
    listeners: {
        afterRender: function(thisForm, options){
            this.keyNav = Ext.create('Ext.util.KeyNav', this.el, {
                enter: insertActiveJob,
                scope: this
            });
        }
    }
};

var actvMdelWin = Ext.widget('window', {
    title:'FTP Active Test - Filter',
    id:'actvMdel-win',
    closeAction:'hide',
    width:400,
    layout:'fit',
    modal:true,
    items:[activeFormPanel]
});

var actvPgbar = Ext.create('Ext.ProgressBar', {
    id    : 'actvPgbar',
    width : 300,
    height:10
});
actvPgbar.wait({
    interval: 500,
    increment: 15,
    text: 'loading...',
    scope: this
});


var activPBWin  = Ext.widget('window', {
    id : 'activPBWin',
    title: 'Please wait ...  ',
    closeAction: 'hide',
    width: 400,
    layout: 'fit',
    resizable: true,
    modal: false,
    items  : [actvPgbar]
});

function insertActiveJob() {
    var form = Ext.getCmp('actv-form').getForm();
    if (form.isValid()) {
        Ext.getCmp('subscriberIdTxt').setValue(Ext.getCmp('servicesCombo').getValue());
        form.submit({
            success:function (form, action) {
                actvMdelWin.close();
                Ext.getCmp('activPBWin').show();
                getActiveResponse(Ext.decode(action.response.responseText).data.jobId);
            },
            failure:function (form, action) {
                Ext.Msg.alert('Job Failed', 'Caught internal error. Please check the logs for details.' );
            }
        });
    }
}

function getActiveResponse(jobsId){
    Ext.require([ '*' ]);
    Ext.Ajax.request({
        url : 'getActiveResponse.htm',
        method : 'POST',
        params : {"jobId":jobsId},
        success : function(response) {
            var status = Ext.decode(response.responseText).success;
            if (status){
                var result = Ext.decode(response.responseText).data.status;
                if (result == 'PENDING')
                    getActiveResponse(jobsId);
                else  if (result == 'SUCCESS'){
                    ftpGridTab.store.loadData(Ext.decode(response.responseText).data.resList, false);
                    ftpGridTab.store.sort('name', 'ASC');
                    topoTabPanel.setActiveTab(4);
                    if(Ext.getCmp('tabTopo').getCollapsed()) Ext.getCmp('tabTopo').toggleCollapse();
                    Ext.getCmp('activPBWin').close();
                }
            }else if (!status){
                modelCallIdsWin.close();
                var jsonRespObj = Ext.decode(response.responseText).data;
                Ext.getCmp('activPBWin').close();
                Ext.Msg.alert('Job Failed', jsonRespObj.errCode + "<br>" + jsonRespObj.errMsg );
            }
        },
        failure : function(response) {
            Ext.Msg.alert('Job Failed', 'Caught internal error. Please check the logs for details.' );
        }
    });
}

Ext.define('ftpsGridModel', {
    extend: 'Ext.data.Model',
    fields: [
        {name: 'name',    type: 'string'},
        {name: 'value',    type: 'string'}
    ]
});

var ftpGridStore = Ext.create('Ext.data.Store', {
    id: 'ftpGrid-store',
    autoLoad: false,
    model: 'ftpsGridModel',
    proxy: {
        type: 'memory',
        reader: {
            type: 'json',
            root: 'resList'
        }
    }
});

var ftpGridTab = Ext.create('Ext.grid.Panel', {
    id:'ftpGrid-panel',
    iconCls:'icon-grid',
    store: ftpGridStore,
    columns: [
        {text: "KPI", flex:1, sortable: true, dataIndex: 'name'},
        {text: "Value", flex:1, sortable: true, dataIndex: 'value'}
    ],
    columnLines:true,
    collapsible:false,
    title:'FTP Active Results',
    autoScroll:true
});